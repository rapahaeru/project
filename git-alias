[user]
email = rapahaeru@gmail.com
name = Raphael Oliveira
[color]
branch = auto
diff = auto
interactive = auto
status = auto
[apply]
whitespace = fix
[color]
ui = auto
[color "branch"]
current = yellow reverse
local = yellow
remote = green
[color "diff"]
meta = yellow bold
frag = magenta bold
old = red bold
new = green bold
[color "status"]
added = yellow
changed = green
untracked = cyan
[alias]
ci = commit
br = branch
co = checkout
df = diff -b
di = diff -b
lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%an, %cr)%Creset' --abbrev-commit --date=relative
ls = lg
ph = push origin HEAD
st = status
amend = commit --amend -C HEAD

fu = fetch origin
pum = pull origin master
fupum = !git co master && git fu && git pum
rebasemaster = !branch=\"git branch 2>/dev/null | grep \\* | awk '{ print $2 }'\" && echo \"Rebasing $branch from master...\" && git fupum && git co $branch && git rebase master -i
cob = !git fetch origin && git co -b $1 origin/$1 && echo \"Checked out origin branch:\"
cod = "!git br -D $1 2> /dev/null; git cob $1"

optimize = !git br | grep -v master | xargs git br -D && git fetch origin && git remote prune origin && git reflog expire --expire=now --all && git gc --prune=now && git gc --aggressive --prune=now
branchage = for-each-ref --sort=-committerdate refs/remotes/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'

new = !git fupum && git co -b $1 && echo \"Created branch with name $1 from master \n\"
arc = !git add . && git rebase --continue
ra = !git amend --reset-author -n

pushall = !git remote | xargs -n1 git push
pushalltags = !git remote | xargs -n1 git push --tags
[merge]
tool = p4merge
[core]
excludesfile = /opt/boxen/config/git/gitignore
pager = brew --prefix git/share/git-core/contrib/diff-highlight/diff-highlight | less
whitespace = trailing-space,space-before-tab
[diff]
tool = diffmerge
merge = p4merge
compactionHeuristic = true
[difftool "diffmerge"]
cmd = diffmerge \"$LOCAL\" \"$REMOTE\"
[mergetool "diffmerge"]
cmd = "diffmerge --merge --result=\"$MERGED\" \"$LOCAL\" \"$(if test -f \"$BASE\"; then echo \"$BASE\"; else echo \"$LOCAL\"; fi)\" \"$REMOTE\""
trustExitCode = true
[mergetool "p4merge"]
cmd = /Applications/p4merge.app/Contents/MacOS/p4merge "$BASE" "$LOCAL" "$REMOTE" "$MERGED"
keepTemporaries = false
trustExitCode = false
keepBackup = false
[push]
default = simple